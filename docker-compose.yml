services:
  trino:
    image: trinodb/trino:latest
    container_name: trino
    ports:
      - "9090:8080"
    volumes:
      - ./assets/trino_iceberg.properties:/etc/trino/catalog/iceberg.properties
  
  # ----------------------------
  # DATALAKE(ICEBERG) SERVICES
  # ----------------------------
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - ./minio/data:/data

  iceberg-postgres:
    image: postgres:14
    container_name: iceberg-postgres
    environment:
      POSTGRES_USER: iceberg
      POSTGRES_PASSWORD: iceberg123
      POSTGRES_DB: iceberg_db
    ports:
      - "9123:5432"
    volumes:
      - iceberg_postgres_data:/var/lib/postgresql/data
      - ./assets/postgres_iceberg.sql:/docker-entrypoint-initdb.d/postgres_iceberg.sql

  # ----------------------------
  # AIRFLOW SERVICES
  # ----------------------------
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-scheduler
      - airflow-init
      - airflow-postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: secret
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      _AIRFLOW_WWW_USER_USERNAME: airflow
      _AIRFLOW_WWW_USER_PASSWORD: airflow
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONPATH: "/opt/airflow/scripts"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
    ports:
      - "8080:8080"
      - "8081:4040" # Spark UI
    command: bash -c "airflow webserver"

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONPATH: "/opt/airflow/scripts"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
    command: bash -c "airflow scheduler"

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-init
    depends_on:
      - airflow-postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      PYTHONDONTWRITEBYTECODE: "1"
    volumes:
      - ./dags:/opt/airflow/dags
    command: bash -c "airflow db migrate && airflow users create --username airflow --firstname Air --lastname Flow --role Admin --email admin@example.com --password airflow"

  airflow-postgres:
    image: postgres:14
    container_name: airflow-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow_postgres_data:/var/lib/postgresql/data

  # ----------------------------
  # SPARK SERVICES
  # ----------------------------
  spark-master:
    image: bitnami/spark:3.5.5
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8082:8080"

  spark-worker:
    image: bitnami/spark:3.5.5
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=8G
      - SPARK_WORKER_CORES=8
    depends_on:
      - spark-master
    ports:
    - "8083:8081"


volumes:
  iceberg_postgres_data:
  airflow_postgres_data: